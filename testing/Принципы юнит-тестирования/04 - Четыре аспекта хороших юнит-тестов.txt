- Хороший юнит-тест должен обладать четырьмя фундаментальными атрибутами, которые могут использоваться для анализа любых
автоматизированных тестов (юнит-, интеграционных или сквозных):
    • защита от багов;
    • устойчивость к рефакторингу;
    • быстрая обратная связь;
    • простота поддержки.

- Защита от багов показывает, несколько хорошо тест справляется с выявлением ошибок (регрессий).
Чем больше кода проверяет тест (как вашего, так и кода библиотек и фреймворков, задействованных в проекте),
тем выше вероятность того, что тест обнаружит ошибку.

- Устойчивость к рефакторингу определяет, насколько тест хрупок: может ли он перенести рефакторинг рабочего кода,
не выдавая ложных срабатываний.

- Ложное срабатывание представляет собой «ложную тревогу»: тест падает, но покрываемая им функциональность работает.
Ложные срабатывания негативно влияют на проект:
    • если тесты падают без веской причины, они притупляют вашу готовность реагировать на проблемы в коде.
    Со временем вы привыкаете к таким сбоям и перестаете обращать на них внимание.
    А это может привести к игнориро- ванию настоящих ошибок, которые затем попадают в продуктив;
    • с другой стороны, при частых ложных срабатываниях вы начинаете все меньше и меньше доверять вашим тестам.
    Они уже не воспринимаются как что-то, на что вы можете положиться.
    Отсутствие доверия приводит к уменьшению ре- факторинга, так как вы пытаетесь свести к минимуму потенциальные ошибки.

- Ложные срабатывания появляются в результате привязки тестов к деталям имплементации тестируемой системы.
Чтобы избежать такой привязки, тест должен проверять конечный результат, а не действия, которые для этого потребовались.

- Защита от багов и устойчивость к рефакторингу составляют метрику точности теста. Тест точен, когда он выдает хороший
сигнал (способен находить ошибки) с минимально возможным шумом (ложных срабатываний).

- Ложные срабатывания не оказывают заметного отрицательного влияния в начале проекта.
С ростом проекта они начинают играть все более важную роль — столь же важную, как ложноотрицательные срабатывания
(незамеченные ошибки).

- Быстрая обратная связь — мера того, насколько быстро выполняется тест.

- Простота поддержки состоит из двух компонентов:
    • сложность понимания теста. Чем меньше тест, тем проще он читается;
    • сложность выполнения теста. Чем меньше внепроцессных зависимостей, тем
    проще поддерживать их в работоспособном состоянии.


- Эффективность теста определяется произведением этих четырех атрибутов. Если один из атрибутов равен нулю,
то эффективность всего теста тоже равна нулю.

- Невозможно создать тест, который имеет максимальные показатели по всем четырем атрибутам,
потому что первые три — защита от багов, устойчивость к рефакторингу и быстрая обратная связь — являются взаимоисключающими.
Тест может максимизировать только два атрибута из трех.

- Устойчивость к рефакторингу не должна быть предметом для компромиссов, потому что этот атрибут в основном сводится к
бинарному выбору: тест либо устойчив к рефакторингу, либо нет. Компромисс между атрибутами сводится к выбору между
защитой от багов и быстротой обратной связи.

- Пирамида тестирования предписывает определенное соотношение юнит-, интеграционных и сквозных тестов:
сквозных тестов должно быть меньше всего, юнит-тестов — больше всего, а интеграционных тестов — где-то посередине.

- Разные типы тестов в пирамиде принимают разные компромиссы между быстротой обратной связи и защиты от багов.
Сквозные тесты отдают предпочтение защите от багов, а юнит-тесты — быстрой обратной связи.

- Используйте тестирование по принципу «черного ящика» при написании тестов.
Используйте тестирование по принципу «белого ящика» при анализе тестов.
